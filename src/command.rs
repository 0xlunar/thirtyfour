pub struct SessionId {
    _id: String,
}

pub struct ElementId {
    _id: String,
}

pub struct WindowHandle {
    _handle: String,
}

pub enum Command {
    Status,
    NewSession,
    GetAllSessions,
    Quit(SessionId),
    GetCurrentWindowHandle(SessionId),
    W3CGetCurrentWindowHandle(SessionId),
    GetWindowHandles(SessionId),
    W3CGetWindowHandles(SessionId),
    Get(SessionId),
    GoForward(SessionId),
    GoBack(SessionId),
    Refresh(SessionId),
    ExecuteScript(SessionId),
    W3CExecuteScript(SessionId),
    ExecuteAsyncScript(SessionId),
    W3CExecuteScriptAsync(SessionId),
    GetCurrentUrl(SessionId),
    GetTitle(SessionId),
    GetPageSource(SessionId),
    Screenshot(SessionId),
    ElementScreenshot(SessionId, ElementId),
    FindElement(SessionId),
    FindElements(SessionId),
    GetActiveElement(SessionId),
    W3CGetActiveElement(SessionId),
    FindChildElement(SessionId, ElementId),
    FindChildElements(SessionId, ElementId),
    ClickElement(SessionId, ElementId),
    ClearElement(SessionId, ElementId),
    SubmitElement(SessionId, ElementId),
    GetElementText(SessionId, ElementId),
    SendKeysToElement(SessionId, ElementId),
    SendKeysToActiveElement(SessionId),
    UploadFile(SessionId),
    GetElementValue(SessionId, ElementId),
    GetElementTagName(SessionId, ElementId),
    IsElementSelected(SessionId, ElementId),
    SetElementSelected(SessionId, ElementId),
    IsElementEnabled(SessionId, ElementId),
    IsElementDisplayed(SessionId, ElementId),
    GetElementLocation(SessionId, ElementId),
    GetElementLocationOnceScrolledIntoView(SessionId, ElementId),
    GetElementSize(SessionId, ElementId),
    GetElementRect(SessionId, ElementId),
    GetElementAttribute(SessionId, ElementId),
    GetElementProperty(SessionId, ElementId),
    GetAllCookies(SessionId),
    AddCookie(SessionId),
    GetCookie(SessionId, String),
    DeleteAllCookies(SessionId),
    DeleteCookie(SessionId, String),
    SwitchToContext(SessionId),
    SwitchToFrame(SessionId),
    SwitchToParentFrame(SessionId),
    SwitchToWindow(SessionId),
    NewWindow(SessionId),
    Close(SessionId),
    GetElementValueOfCSSProperty(SessionId, ElementId, String),
    ImplicitWait(SessionId),
    SetScriptTimeout(SessionId),
    SetTimeouts(SessionId),
    DismissAlert(SessionId),
    W3CDismissAlert(SessionId),
    AcceptAlert(SessionId),
    W3CAcceptAlert(SessionId),
    SetAlertValue(SessionId),
    W3CSetAlertValue(SessionId),
    GetAlertText(SessionId),
    W3CGetAlertText(SessionId),
    SetAlertCredentials(SessionId),
    W3CActions(SessionId),
    W3CClearActions(SessionId),
    Click(SessionId),
    DoubleClick(SessionId),
    MouseDown(SessionId),
    MouseUp(SessionId),
    MoveTo(SessionId),
    GetWindowSize(SessionId, WindowHandle),
    SetWindowSize(SessionId, WindowHandle),
    GetWindowPosition(SessionId, WindowHandle),
    SetWindowPosition(SessionId, WindowHandle),
    GetWindowRect(SessionId),
    SetWindowRect(SessionId),
    MaximizeWindow(SessionId, WindowHandle),
    W3CMaximizeWindow(SessionId),
    MinimizeWindow(SessionId),
    FullScreenWindow(SessionId),
    SetScreenOrientation(SessionId),
    GetScreenOrientation(SessionId),
    SingleTap(SessionId),
    TouchDown(SessionId),
    TouchUp(SessionId),
    TouchMove(SessionId),
    TouchScroll(SessionId),
    DoubleTap(SessionId),
    LongPress(SessionId),
    Flick(SessionId),
    ExecuteSQL(SessionId),
    GetLocation(SessionId),
    SetLocation(SessionId),
    GetAppCache(SessionId),
    GetAppCacheStatus(SessionId),
    ClearAppCache(SessionId),
    GetNetworkConnection(SessionId),
    SetNetworkConnection(SessionId),
    GetLocalStorageItem(SessionId, String),
    RemoveLocalStorageItem(SessionId, String),
    GetLocalStorageKeys(SessionId),
    SetLocalStorageItem(SessionId),
    ClearLocalStorage(SessionId),
    GetLocalStorageSize(SessionId),
    GetSessionStorageItem(SessionId, String),
    RemoveSessionStorageItem(SessionId, String),
    GetSessionStorageKeys(SessionId),
    SetSessionStorageItem(SessionId),
    ClearSessionStorage(SessionId),
    GetSessionStorageSize(SessionId),
    GetLog(SessionId),
    GetAvailableLogTypes(SessionId),
    CurrentContextHandle(SessionId),
    ContextHandles(SessionId),
}

impl Command {
    pub fn format_request(&self) -> (String, serde_json::Value) {
        (String::new(), serde_json::Value::Null)
    }
}
